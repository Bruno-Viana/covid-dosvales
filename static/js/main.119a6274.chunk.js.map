{"version":3,"sources":["templates/rona.webp","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","title","render","isSorted","isSortedDesc","class","row","i","getRowProps","cells","cell","getCellProps","App","useState","Dados","SetDados","Carregando","SetCarregando","buscaDados","a","Axios","get","then","res","console","log","useEffect","DadosFormatados","React","useMemo","Header","accessor","className","src","logo","alt","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Circle","pathOptions","color","radius","Tooltip","sticky","cidade","nome","incidencia","confirmados","novosconfirmados","obitos","novosobitos","mortalidade","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.119a6274.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rona.a4615328.webp\";","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Axios from \"axios\";\nimport { MapContainer, TileLayer, Circle, Tooltip } from 'react-leaflet';\nimport { useTable, useSortBy } from 'react-table'\nimport logo from './templates/rona.webp'\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  )\n  const firstPageRows = rows.slice(0, 200)\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} title=\"Ordenar\">\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? <i class=\"fas fa-sort-down\"></i>\n                        : <i class=\"fas fa-sort-up\"></i>\n                      : <i class=\"fas fa-sort\"></i>}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render('Cell')} </td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n      </table>\n      <br />\n    </>\n  )\n}\n\nfunction App() {\n  \n  const[Dados, SetDados] = useState(\"\");\n\n  const[Carregando, SetCarregando] = useState(false);\n\n  const buscaDados = async () =>{\n    SetCarregando(true);\n    try{\n      await Axios.get(\"https://covid-dosvales.herokuapp.com/api/dados\").then(\n        (res) => {\n          console.log(res.data);\n          SetDados(res.data);\n        }\n      )\n    } catch(e){\n      //Em casos onde a API não funcionar mais pelas restrições do Heroku OU a secretaria da saúde mudar os elementos da página já que a API faz web scrapping. Os dados retirados foram de 18/10/23\n      const staticData = [\n        {\n         \"nome\": \"Arroio do Meio\",\n         \"confirmados\": \"6021\",\n         \"novosconfirmados\": \"61\",\n         \"incidencia\": \"28940.2\",\n         \"obitos\": \"61\",\n         \"novosobitos\": \"1\",\n         \"mortalidade\": \"293.2\"\n        },\n        {\n         \"nome\": \"Cachoeira do Sul\",\n         \"confirmados\": \"25033\",\n         \"novosconfirmados\": \"108\",\n         \"incidencia\": \"30453.4\",\n         \"obitos\": \"251\",\n         \"novosobitos\": \"2\",\n         \"mortalidade\": \"305.3\"\n        },\n        {\n         \"nome\": \"Candelária\",\n         \"confirmados\": \"6784\",\n         \"novosconfirmados\": \"40\",\n         \"incidencia\": \"21629.2\",\n         \"obitos\": \"91\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"290.1\"\n        },\n        {\n         \"nome\": \"Lajeado\",\n         \"confirmados\": \"27164\",\n         \"novosconfirmados\": \"361\",\n         \"incidencia\": \"32332.7\",\n         \"obitos\": \"251\",\n         \"novosobitos\": \"3\",\n         \"mortalidade\": \"298.8\"\n        },\n        {\n         \"nome\": \"Passo do Sobrado\",\n         \"confirmados\": \"1521\",\n         \"novosconfirmados\": \"3\",\n         \"incidencia\": \"23274.7\",\n         \"obitos\": \"20\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"306.1\"\n        },\n        {\n         \"nome\": \"Rio Pardo\",\n         \"confirmados\": \"9014\",\n         \"novosconfirmados\": \"2\",\n         \"incidencia\": \"23550.6\",\n         \"obitos\": \"110\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"308.3\"\n        },\n        {\n         \"nome\": \"Santa Cruz do Sul\",\n         \"confirmados\": \"49491\",\n         \"novosconfirmados\": \"123\",\n         \"incidencia\": \"37948.6\",\n         \"obitos\": \"416\",\n         \"novosobitos\": \"2\",\n         \"mortalidade\": \"319.0\"\n        },\n        {\n         \"nome\": \"Sinimbu\",\n         \"confirmados\": \"1598\",\n         \"novosconfirmados\": \"9\",\n         \"incidencia\": \"15709.8\",\n         \"obitos\": \"25\",\n         \"novosobitos\": \"1\",\n         \"mortalidade\": \"245.8\"\n        },\n        {\n         \"nome\": \"Sobradinho\",\n         \"confirmados\": \"3877\",\n         \"novosconfirmados\": \"21\",\n         \"incidencia\": \"25903.7\",\n         \"obitos\": \"7\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"227.2\"\n        },\n        {\n         \"nome\": \"Taquari\",\n         \"confirmados\": \"4869\",\n         \"novosconfirmados\": \"13\",\n         \"incidencia\": \"18126.0\",\n         \"obitos\": \"87\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"323.9\"\n        },\n        {\n         \"nome\": \"Vale Verde\",\n         \"confirmados\": \"569\",\n         \"novosconfirmados\": \"4\",\n         \"incidencia\": \"16271.1\",\n         \"obitos\": \"9\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"257.4\"\n        },\n        {\n         \"nome\": \"Venâncio Aires\",\n         \"confirmados\": \"19961\",\n         \"novosconfirmados\": \"152\",\n         \"incidencia\": \"27896.4\",\n         \"obitos\": \"157\",\n         \"novosobitos\": \"1\",\n         \"mortalidade\": \"219.4\"\n        },\n        {\n         \"nome\": \"Vera Cruz\",\n         \"confirmados\": \"7150\",\n         \"novosconfirmados\": \"73\",\n         \"incidencia\": \"26616.5\",\n         \"obitos\": \"55\",\n         \"novosobitos\": \"0\",\n         \"mortalidade\": \"204.7\"\n        }\n       ]\n      SetDados(staticData)\n    }\n  }\n\n  \n  useEffect(() => {\n    buscaDados();\n  }, [])  \n  const DadosFormatados = [...Dados]\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Cidade',\n        accessor: 'nome',\n      },\n      {\n        Header: 'Confirmados',\n        accessor: 'confirmados',\n      },\n      {\n        Header: 'Novos Casos',\n        accessor: 'novosconfirmados',\n      },\n      {\n        Header: 'Incidência',\n        accessor: 'incidencia',\n      },\n      {\n        Header: 'Óbitos',\n        accessor: 'obitos',\n      },\n      {\n        Header: 'Novos Óbitos',\n        accessor: 'novosobitos',\n      },\n      {\n        Header: 'Mortalidade',\n        accessor: 'mortalidade',\n      },\n    ],\n    []\n    )\n    \n    const data = DadosFormatados\n    return (\n    <div className=\"reactapp\">\n    <header>\n    <h1><img className='logo' src={logo} alt=\"Logo\"></img>COVID - Santa Cruz do Sul e Região.</h1>\n    </header>\n    <div className=\"App\">\n      <div className=\"wrapper\">\n      <MapContainer className='mapcontainer' center={[-29.7141869, -52.4285914]} zoom={9} scrollWheelZoom={true}>\n        <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n        {/*Arroio do Meio */}\n        <Circle center={[-29.4020392, -51.9444993]} pathOptions={{color : 'red'}} radius={3400}> \n        <Tooltip sticky>{DadosFormatados.slice(0,1).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Cachoeria do Sul */}\n        <Circle center={[-30.0474778, -52.8905413]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(1,2).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Candelária*/}\n        <Circle center={[-29.668391, -52.789495]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(2,3).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Lajeado*/}\n        <Circle center={[-29.4671522, -51.9624046]} pathOptions={{color : 'red'}} radius={4000}> \n        <Tooltip sticky>{DadosFormatados.slice(3,4).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Passo do Sobrado*/}\n        <Circle center={[-29.7477243, -52.2734293]} pathOptions={{color : 'red'}} radius={1300}> \n        <Tooltip sticky>{DadosFormatados.slice(4,5).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Rio Pardo*/}\n        <Circle center={[-29.9820554,-52.3702447]} pathOptions={{color : 'red'}} radius={1300}> \n        <Tooltip sticky>{DadosFormatados.slice(5,6).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Santa Cruz do Sul*/}\n        <Circle center={[-29.7141869,-52.4285914]} pathOptions={{color : 'red'}} radius={3000}> \n        <Tooltip sticky>{DadosFormatados.slice(6,7).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Sinimbu*/}\n        <Circle center={[-29.5346879,-52.5199906]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(7,8).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Sobradinho*/}\n        <Circle center={[-29.4131826,-53.0256794]} pathOptions={{color : 'red'}} radius={2300}> \n        <Tooltip sticky>{DadosFormatados.slice(8,9).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Taquari*/}\n        <Circle center={[-29.79433,-51.865346]} pathOptions={{color : 'red'}} radius={3800}> \n        <Tooltip sticky>{DadosFormatados.slice(9,10).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Vale do Sol*/}\n        <Circle center={[-29.6036459,-52.6867334]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(10,11).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Vale Verde*/}\n        <Circle center={[-29.7830651,-52.1843582]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(11,12).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Venâncio Aires*/}\n        <Circle center={[-29.614306,-52.193159]} pathOptions={{color : 'red'}} radius={3800}> \n        <Tooltip sticky>{DadosFormatados.slice(12,13).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n        {/*Vera Cruz*/}\n        <Circle center={[-29.714827599827537, -52.50212825755918]} pathOptions={{color : 'red'}} radius={2000}> \n        <Tooltip sticky>{DadosFormatados.slice(13,14).map(cidade => ([<strong>{cidade.nome}</strong>, <br/>,'Incidência /100mil: ', cidade.incidencia, <br/>,'Casos Confirmados: ' +cidade.confirmados,<br/>,'Novos Casos: ' , cidade.novosconfirmados , <br/>,'Óbitos: ', cidade.obitos, <br/>, 'Novos Óbitos: ',  cidade.novosobitos, <br/>,'Mortalidade /100mil: ', cidade.mortalidade]))}</Tooltip>\n        </Circle>\n      </MapContainer>\n          {Carregando ? \n          <>\n          <div className=\"info\"><i className=\"fas fa-info-circle\"></i></div>\n    <div className=\"hideDesc\">*Incidência de infecção e Mortalidade são resultados gerados a partir de uma evaluação por 100 mil habitantes.</div>\n          <Table columns={columns} data={data}></Table>\n          <footer>\n    <div className=\"about\">\n            <h1>Sobre</h1>\n            <p className=\"text-justify\">API criada por <a className=\"github\" href=\"https://github.com/Bruno-Viana\" target=\"_blank\" rel=\"noreferrer\">@Bruno Viana</a> em Q1 de 2021. Todos os dados retirados da Secretaria da Saúde do Rio Grande do Sul.<br/>\n            Copyright © 2021 Bruno-Viana. Todos os direitos reservados.</p>\n        </div>\n    <div className=\"test\">\n        <h1 >Aviso</h1>\n        <p>Website não governamental feito apenas com intenções educativas.<br/>\n        Para mais informações sobre COVID: <a href=\"https://saude.rs.gov.br/inicial\" target=\"_blank\" rel=\"noreferrer\">Secretaria da Saúde</a></p>\n    </div>\n    <div className=\"social\">\n        <ul className=\"social-icons\">\n        <h1>GitHub</h1>\n          <a className=\"github\" href=\"https://github.com/Bruno-Viana\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-github\"></i></a>\n        </ul>\n    </div>\n    </footer>\n          </>\n          :(<h1>Carregando...</h1>)}\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}